generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User_Aluno {
  id       String  @id @default(uuid())
  nome     String
  email    String  @unique
  senha    String
  token    String
  telefone String?
  cpf      String?
  tipo     String?
}

model User_Imobiliaria {
  id       String  @id @default(uuid())
  nome     String
  email    String  @unique
  senha    String
  token    String
  telefone String?
  cnpj     String?
  tipo     String?
}


model Aluno {
  id             String   @id @default(uuid())
  nome           String
  cpf            String   @unique
  email          String   @unique
  telefone       String?
  dataNascimento DateTime?
  sexo           String?
  cursoId        String?
  curso          Curso?   @relation(fields: [cursoId], references: [id])
  turmas         AlunoTurma[]
  interesses     Interesse[]
  mensagens      Mensagem[]
}

model Curso {
  id       String  @id @default(uuid())
  nome     String
  duracao  String?
  materias Json?
  periodos String?
  campusId String?
  campus   Campus? @relation(fields: [campusId], references: [id])
  alunos   Aluno[]
}

model Campus {
  id       String  @id @default(uuid())
  nome     String
  endereco String
  numero   Int?
  email    String?
  telefone String?
  cursos   Curso[]
  turmas   Turma[]
}

model Turma {
  id          String      @id @default(uuid())
  periodo     String
  campusId    String?
  campus      Campus?     @relation(fields: [campusId], references: [id])
  alunos      AlunoTurma[]
}

model AlunoTurma {
  id        String @id @default(uuid())
  alunoId   String
  turmaId   String
  dataMatricula DateTime
  aluno     Aluno @relation(fields: [alunoId], references: [id])
  turma     Turma @relation(fields: [turmaId], references: [id])
}

model Imobiliaria {
  id       String  @id @default(uuid())
  nome     String
  endereco String
  numero   Int?
  email    String  @unique
  telefone String
  imoveis  Imovel[]

  Anuncio Anuncio[]
}

model Imovel {
  id            String      @id @default(uuid())
  nome          String
  endereco      String
  numero        Int
  numQuartos    Int
  numBanheiros  Int
  mobiliado     Boolean
  status        Boolean
  imobiliariaId String
  imobiliaria   Imobiliaria @relation(fields: [imobiliariaId], references: [id])
  anuncios      Anuncio[]
  interesses    Interesse[]
}

model Anuncio {
  id            String      @id @default(uuid())
  imovelId      String
  imobiliariaId String
  dataPublicacao DateTime
  status        String
  imovel        Imovel      @relation(fields: [imovelId], references: [id])
  imobiliaria   Imobiliaria @relation(fields: [imobiliariaId], references: [id])
}

model Interesse {
  id         String   @id @default(uuid())
  alunoId    String
  imovelId   String
  mensagem   String?
  dataInteresse DateTime
  status     String
  aluno      Aluno    @relation(fields: [alunoId], references: [id])
  imovel     Imovel   @relation(fields: [imovelId], references: [id])
  chats      Chat[]
}

model Chat {
  id        String      @id @default(uuid())
  status    String
  intereseId String
  interesses Interesse @relation(fields: [intereseId], references: [id])
  mensagens Mensagem[]
}


model Mensagem {
  id         String   @id @default(uuid())
  chatId     String
  remetenteId String
  conteudo   String
  dataEnvio  DateTime @default(now())
  chat       Chat     @relation(fields: [chatId], references: [id])
  remetente  Aluno    @relation(fields: [remetenteId], references: [id])
}